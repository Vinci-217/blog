diff --git a/dist/jstoxml.js b/dist/jstoxml.js
index bfa70238ea47d01dcaf7967e9ba30e6e30736a40..cdd17ebfa00069257cd8b9faefe944a61e78d5dc 100644
--- a/dist/jstoxml.js
+++ b/dist/jstoxml.js
@@ -1,22 +1,6 @@
-(function (global, factory) {
-  if (typeof define === "function" && define.amd) {
-    define(["exports"], factory);
-  } else if (typeof exports !== "undefined") {
-    factory(exports);
-  } else {
-    var mod = {
-      exports: {}
-    };
-    factory(mod.exports);
-    global.jstoxml = mod.exports;
-  }
-})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
+
   "use strict";
 
-  Object.defineProperty(_exports, "__esModule", {
-    value: true
-  });
-  _exports.toXML = _exports.default = void 0;
   function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
   function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
   function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
@@ -224,7 +208,7 @@
     '&': '&amp;',
     '"': '&quot;'
   };
-  var toXML = _exports.toXML = function toXML() {
+  export function toXML() {
     var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
     var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
     var _config$depth = config.depth,
@@ -407,7 +391,3 @@
     }
     return "".concat(headerStr).concat(outputStr);
   };
-  var _default = _exports.default = {
-    toXML: toXML
-  };
-});
